plugins {
    id 'org.springframework.boot' version '2.3.0.RELEASE'
    id "com.github.node-gradle.node" version "2.2.4"

    id "com.google.cloud.tools.jib" version "2.7.1"
}

apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'

archivesBaseName = 'spring-boot-kisses-angular'
version = '0.4.0'

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web")
}

def generatedResources = "src/generated/resources"

sourceSets {
    main {
        output.dir(generatedResources, builtBy: 'ngBuild')
    }
}

node {
    version = '12.17.0'
    npmVersion = '6.14.5'
    download = true
}

task audit(type: NpmTask, dependsOn: 'npmInstall') {
    args = ['audit']
}

task ngBuild(type: NodeTask, dependsOn: 'npmInstall') {
    script = project.file('node_modules/@angular/cli/bin/ng')
    args = ['build', '--prod']
}

task ngServe(type: NodeTask, dependsOn: 'npmInstall') {
    script = project.file('node_modules/@angular/cli/bin/ng')
    args = ['serve', '--open']
}

processResources.dependsOn 'ngBuild'

jibDockerBuild.dependsOn 'processResources'

jib {
    to {
        image = 'datenkollektiv/spring-boot-kisses-angular'
        tags = ['latest', project.version]
    }
    container {
        appRoot = '/app'
        ports = ['8080']
        workingDirectory = '/app'
    }
    extraDirectories {
        paths {
            path {
                from = file(generatedResources)
                into = '/app'
            }
        }
    }
}

clean.delete << file('node_modules')
clean.delete << file(generatedResources)
